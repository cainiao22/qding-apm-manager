<?xml version="1.0" encoding="UTF-8"?>

<!--原则上禁止修改日志配置文件-->

<configuration debug="false">
    <!--日志存放目录 -->
    <property name="LOG_PATH" value="@log.path@"/>
    <!--日志存储时间-->
    <property name="MAX_HISTORY" value="3"/>
    <!--单个LOG文件最大SIZE-->
    <property name="MAX_FILE_SIZE" value="500MB"/>
    <!--所有归档日志最大size, 当超过限制时, 会删掉旧的归档日志-->
    <property name="TOTAL_SIZE_CAP" value="30GB"/>

    <!--异步写LOG队列size-->
    <property name="ASYNC_QUEUE_SIZE" value="1024"/>
    <!--默认情况下, 当blockingQueue容量大于阈值(80%)时，丢弃ERROR以下级别日志, 如果设置为0则不丢弃日志-->
    <property name="DISCARDING_THRESHOLD" value="0"/>

    <!--profile environment, 配合maven使用-->
    <property name="PROFILE_ENV" value="@profile.env@"/>

    <!--输出日志到控制台-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--异步模式输出日志到文件-->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <logLevel/>
                <callerData/>
                <threadName/>
                <pattern>
                    <pattern>
                        {
                        "appname": "@spring.application.name@",
                        "trace": "%X{X-B3-TraceId:-}",
                        "span": "%X{X-B3-SpanId:-}",
                        "parent": "%X{X-B3-ParentSpanId:-}",
                        "exportable": "%X{X-Span-Export:-}"
                        }
                    </pattern>
                </pattern>
                <message/>
                <stackTrace/>
            </providers>
        </encoder>
    </appender>

    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>${DISCARDING_THRESHOLD}</discardingThreshold>
        <queueSize>${ASYNC_QUEUE_SIZE}</queueSize>
        <appender-ref ref="FILE"/>
    </appender>

    <if condition='property("PROFILE_ENV").equals("debug")'>
        <then>
            <root level="DEBUG">
                <appender-ref ref="STDOUT"/>
                <appender-ref ref="ASYNC_FILE"/>
            </root>
        </then>
    </if>

    <if condition='property("PROFILE_ENV").equals("dev")'>
        <then>
            <root level="DEBUG">
                <appender-ref ref="ASYNC_FILE"/>
            </root>
        </then>
    </if>

    <if condition='property("PROFILE_ENV").equals("qa")'>
        <then>
            <root level="INFO">
                <appender-ref ref="ASYNC_FILE"/>
            </root>
        </then>
    </if>

    <if condition='property("PROFILE_ENV").equals("prod")'>
        <then>
            <root level="INFO">
                <appender-ref ref="ASYNC_FILE"/>
            </root>
        </then>
    </if>

    <!--只有ERROR级别以上的框架日志才被输出-->
    <logger name="com.apache.ibatis" level="ERROR"/>
    <logger name="java.sql.Connection" level="ERROR"/>
    <logger name="java.sql.Statement" level="ERROR"/>
    <logger name="java.sql.PreparedStatement" level="ERROR"/>
    <logger name="org.apache.zookeeper" level="ERROR"/>
</configuration>
